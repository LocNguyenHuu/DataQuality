Database: [
]

Sources: [
  {
    id = "USGS_2000"
    type = "HDFS"
    path = "./docs/examples/data/usgs/USGS_2000.csv"
    delimiter = ","
    header = true
    fileType = "csv"
    keyFields = ["Depth", "Date", "Time"]
  }
]

VirtualSources: [
  {
    id = "USGS_US_SOURCE"
    type = "FILTER-SQL"
    parentSources=["USGS_2000"],
    sql ="select * from USGS_2000 where `Magnitude Source`='US'"
    keyFields = ["Date","Time","Latitude","Longitude","Type","Depth"]
    save = true
  },
]

Metrics: [
  {
    id: "depth_avg"
    name: "AVG_NUMBER"
    type: "COLUMN"
    description: "Average value of depth"
    config: {
      file: "USGS_2000",
      columns: ["Depth"]
    }
  },
  {
    id: "null_values"
    name: "NULL_VALUES"
    type: "COLUMN"
    description: "num of null vals"
    config: {
      file: "USGS_2000",
      columns: ["Time"]
    }
  },
  {
    id: "usgs_row_count"
    name: "ROW_COUNT"
    type: "FILE"
    description: ""
    config: {
      file: "USGS_US_SOURCE"
    }
  },
   {
      id: "usgs_us_row_count"
      name: "ROW_COUNT"
      type: "FILE"
      description: ""
      config: {
        file: "USGS_2000"
      }
    },
  {
    id: "eq_colimns"
    name: "COLUMN_EQ"
    type: "COLUMN"
    description: ""
    config: {
      file: "USGS_2000"
      columns: ["Location Source","Magnitude Source"]
      params: {}
    }
  }
]

ComposedMetrics: [
  {
    id: "not_null_values"
    name: "qwe"
    description: "qwe"
    formula: "$usgs_row_count-$null_values"
  },
]

LoadChecks: [
  {
    id = "usgs_is_avro"
    type = "FILE_TYPE"
    source = "USGS_2000"
    option = "avro"
  },
  {
    id = "usgs_is_csv"
    type = "FILE_TYPE"
    source = "USGS_2000"
    option = "csv"
  },
]

Checks: [
  {
    id: "depth_avg_check"
    type: "snapshot"
    subtype: "GREATER_THAN"
    description: "Checks is average of depth is greather than 10"
    config: {
      metrics: ["usgs_row_count"]
      params: {threshold: "50"}
    }
  },
  {
    id: "fail_check"
    type: "snapshot"
    subtype: "GREATER_THAN"
    description: "Checks is average of depth is greather than 10"
    config: {
      metrics: ["usgs_row_count"]
      params: {threshold: "100000"}
    }
  },
  {
    id: "date_trend_check"
    type: "trend"
    subtype: "AVERAGE_BOUND_FULL_CHECK"
    name: "some basic trend"
    description: "trend date"
    config: {
      metrics: ["usgs_row_count"]
      rule: "date"
      params: {threshold: "0.5", timewindow: "3"}
    }
  },
  {
    id: "record_trend_check"
    type: "trend"
    subtype: "AVERAGE_BOUND_FULL_CHECK" // avg*(1-threshold) <= current <= avg*threshold
    name: "some basic trend"
    description: "trend rule"
    config: {
      metrics: ["usgs_row_count"]
      rule: "record"
      params: {threshold: "0.5", timewindow: "3"}
    }
  }
]

Targets: [
  {
    type: "FILE-METRICS"
    config: {
      fileFormat: "csv"
      path: "/home/emakhov/IdeaProjects/Agile.DataQuality/tmp/fs/results"
      delimiter: ","
    }
  },
  {
    type: "COLUMNAR-METRICS"
    config: {
      fileFormat: "csv"
      path: "/home/emakhov/IdeaProjects/Agile.DataQuality/tmp/fs/results"
      delimiter: ","
    }
  },
  {
    type: "COMPOSED-METRICS"
    config: {
      fileFormat: "csv"
      path: "/home/emakhov/IdeaProjects/Agile.DataQuality/tmp/fs/results"
      delimiter: ","
    }
  },
  {
    type: "CHECKS"
    config: {
      fileFormat: "csv"
      path: "/home/emakhov/IdeaProjects/Agile.DataQuality/tmp/fs/results"
      delimiter: ","
    }
  },
  {
    type: "LOAD-CHECKS"
    config: {
      fileFormat: "csv"
      path: "/home/emakhov/IdeaProjects/Agile.DataQuality/tmp/fs/results"
      delimiter: ","
    }
  }
]

Postprocessing: [
  {
    mode: "enrich"
    config: {
      source: "USGS_US_SOURCE"
      metrics: ["usgs_row_count"]
      checks: ["depth_avg_check"]
      extra: {
        person: "Pippo"
      }
      saveTo: {
        fileName: "usgs_enriched"
        fileFormat: "csv"
        path: "./tmp/postproc"
        delimiter: ","
      }
    }
  },
  {
    mode: "transpose_by_key"
    config: {
      keyColumns: ["Date", "Time"]
      source: "usgs_enriched"
      saveTo: {
        fileName: "usgs_transposed"
        fileFormat: "csv"
        path: "./tmp/postproc"
        delimiter: ","
        quoted: true
      }
    }
  }
]



